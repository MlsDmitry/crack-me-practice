import { Config } from "./config";
/**
 * ConfigBuilder class for creating the immutable Config.
 */
declare class ConfigBuilder {
    private _libraries;
    private _backtrace;
    private _includeExports;
    private _excludeExports;
    private _env;
    private _vm;
    constructor();
    /**
     * A list of libraries that the jnitrace engine should trace.
     */
    set libraries(libraries: string[]);
    /**
     * Get the list of libraries that the jnitrace engine should be tracing.
     */
    get libraries(): string[];
    /**
     * Set the Frida backtrace method that the jnitrace engine should use.
     */
    set backtrace(backtrace: string);
    /**
     * Get the Frida backtrace method that the jnitrace engine should use.
     */
    get backtrace(): string;
    /**
     * Set the list of exports that the jnitrace engine should trace.
     */
    set includeExports(exports: string[]);
    /**
     * Get the list of exports that the jnitrace engine should trace.
     */
    get includeExports(): string[];
    /**
     * Set the list of exports that the jnitrace engine should not trace.
     */
    set excludeExports(exports: string[]);
    /**
     * Get the list of exports that the jnitrace engine should not tracqe.
     */
    get excludeExports(): string[];
    /**
     * Set whether the jnitrace engine should or should not trace JNIEnv struct
     * method calls.
     */
    set env(env: boolean);
    /**
     * Get whether the jnitrace engine should or should not trace JNIEnv struct
     * method calls.
     */
    get env(): boolean;
    /**
     * Set whether the jnitrace engine should or should not trace JavaVM struct
     * method calls.
     */
    set vm(vm: boolean);
    /**
     * Get whether the jnitrace engine should or should not trace JavaVM struct
     * method calls.
     */
    get vm(): boolean;
    /**
     * Build the Config to be used by the jnitrace engine.
     */
    build(): Config;
}
export { ConfigBuilder };
